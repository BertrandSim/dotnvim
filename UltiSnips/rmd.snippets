# global !p
# from usnip_helpers import *
# endglobal

# post_expand "jump_forward(snip, 1)"
# snippet `r "r code chunk" b
# \`\`\`{r, label='$1'}
# ${2:${VISUAL}}
# \`\`\`
# $0
# endsnippet

snippet knitrsetup "setup knitr params" b
\`\`\`{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align='center', out.width='70%')
\`\`\`
endsnippet

snippet rr "r code chunk" b
\`\`\`{r$1}
${2:${VISUAL}}
\`\`\`
$0
endsnippet

# alias
snippet chk "r code chunk" b
\`\`\`{r$1}
${2:${VISUAL}}
\`\`\`
$0
endsnippet

snippet res "r code chunk with echo=show_soln" b
\`\`\`{r$1, echo=show_soln, eval=show_soln}
${2:${VISUAL}}
\`\`\`
endsnippet


snippet rasis "chunk for as-is text" b
\`\`\`{asis$1}
${2:${VISUAL}}
\`\`\`
$0
endsnippet

snippet rases "chunk for as-is text with echo=show_soln" b
\`\`\`{asis$1, echo=show_soln}
${2:${VISUAL}}
\`\`\`
$0
endsnippet


extends markdown, tex, r
# or extend manually to current buffer with 
# `:UltiSnipsAddFiletypes rmd.markdown`, etc.
