global !p
from usnip_helpers import *
from usnip_contexts import *
from usnip_tex_contexts import * 	
endglobal

# templates ([{1
# ---------

context "top_of_file(snip, 2)"
post_expand "jump_forward(snip, 1)"
snippet doc "basic template" b
\documentclass[${1:opt}]{${2:article}}

\usepackage{amsmath, amssymb}
\usepackage[shortlabels]{enumitem}
\setlist[enumerate]{align=left}

\begin{document}

	${0:${VISUAL}}

\end{document}
endsnippet

context "top_of_file(snip, 2)"
post_expand "jump_forward(snip, 1)"
snippet beamerdoc "Beamer template" b
\documentclass[${1:}]{beamer}

% \usetheme[]{}
% \setbeamertemplate{}{}

\usepackage{amsmath, amssymb}

\begin{document}

\title{}
\subtitle{}
	
\begin{frame}
\titlepage
\end{frame}

${0:${VISUAL}}

\end{document}
endsnippet

context "top_of_file(snip, 2)"
post_expand "jump_forward(snip, 2)"
snippet doclua "unicode input with lualatex" b
%! TeX program = lualatex
\documentclass[${1:opt}]{${2:article}}
\usepackage{amsmath} 
\usepackage{unicode-math} %to load after any math or font-related packages
%\setmainfont{Libertinus Serif}
%\setmathfont{Libertinus Math}
\setmainfont{STIX Two Text}
\setmathfont{STIX Two Math}

\usepackage[shortlabels]{enumitem}
\setlist[enumerate]{align=left}
\begin{document}

	${3:${VISUAL}}

\end{document}
endsnippet

context "top_of_file(snip, 2)"
post_expand "jump_forward(snip, 2)"
snippet tikzpic "tikz standalone" b
\documentclass[tikz, border=5mm]{standalone}
\usetikzlibrary{$1}
\tikzset{$2}
\begin{document}
\begin{tikzpicture}

	${3:${VISUAL}}

\end{tikzpicture}
\end{document}
endsnippet

# preamble ([{1
# --------

post_expand "jump_forward(snip, 2)"
snippet usep "\usepackage" b
\usepackage${1:[${2:opt}]}{${3:name}}
endsnippet

snippet nc "\newcommand" b
\newcommand{$1}{$2}
endsnippet

snippet rnc "\renewcommand" b
\renewcommand{$1}{$2}
endsnippet

snippet newth "\newtheorem w parent counter" b
\newtheorem{${1:env_name}}{${2:text}}[${3:parent_counter}]
endsnippet

snippet newths "\newtheorem w shared counter" b
\newtheorem{${1:env_name}}[${2:shared_counter}]{${3:text}}
endsnippet

snippet dmo "\DeclareMathOperator{\op}{op}" b
\DeclareMathOperator{${1:\op}}{${2:`!p snip.rv=t[1].lstrip("\\")`}}
endsnippet

snippet dmo* "\DeclareMathOperator*{\op}{op}" bA
\DeclareMathOperator*{${1:\op}}{${2:`!p snip.rv=t[1].lstrip("\\")`}}
endsnippet

snippet ndc "\NewDocumentCommand" b
\NewDocumentCommand{$1}{${2:arg spec}}{%
	$3
}
endsnippet

snippet "if(nv|v|b)(t|f)" "If([No]Value|Boolean)(T|F|TF) xparse helper" r
\If`!p 
if match.group(1) == "nv":
  str1 = "NoValue"
elif match.group(1) == "v":
  str1 = "Value"
else: #match.group(1) == "b"
  str1 = "Boolean"
snip.rv = str1 + match.group(2).upper()
`{${1:cond}}{${2:code}}
endsnippet

snippet "if(nv|v|b)(tf)" "If([No]Value|Boolean)(T|F|TF) xparse helper" r
\If`!p 
if match.group(1) == "nv":
  str1 = "NoValue"
elif match.group(1) == "v":
  str1 = "Value"
else: #match.group(1) == "b"
  str1 = "Boolean"
snip.rv = str1 + match.group(2).upper()
`{${1:cond}}{${2:code_true}}{${3:code_false}}
endsnippet


# sections ([{1
# --------

snippet sec "\section" b
\section{${1:name}}
endsnippet

snippet subsec "\subsection" b
\subsection{${1:name}}
endsnippet

snippet ssubsec "\subsubsection" b
\subsubsection{${1:name}}
endsnippet

snippet para "\paragraph" b
\paragraph{${1:name}}
endsnippet

snippet subpara "\subparagraph" b
\subparagraph{${1:name}}
endsnippet

# section headers ([{1
# ---------------

snippet texor "\texorpdfstring, using math in headers" 
\texorpdfstring{${1:${VISUAL:math}}}{${2:ascii}}
endsnippet


# lists ([{1
# ----- 
snippet enum "enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

# requires [shortlabels]{enumitem}
snippet enuma "enumerate[(a)]" b
\begin{enumerate}[(a)]
	\item $0
\end{enumerate}
endsnippet

# requires [shortlabels]{enumitem}
snippet enumi "enumerate[(i)]" b
\begin{enumerate}[(i)]
	\item $0
\end{enumerate}
endsnippet

snippet items "itemize" b
\begin{itemize}
	${0:${VISUAL}}
\end{itemize}
endsnippet

snippet it "item" b
\item $0
endsnippet


# text ([{1
# ---- 
snippet color "color"
\textcolor{${1:red}}{${2:${VISUAL:text}}}
endsnippet

snippet ttt "\texttt" 
\texttt{$1}
endsnippet

snippet rule "fill in the blank" 
\rule{${1:4em}}{${2:0.5pt}}
endsnippet


# vim: set foldmarker=([{,}]) :
